# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                        controllers.Application.index
GET         /restricted                              controllers.Application.restricted
GET         /assets/javascript/routes.js             controllers.Application.jsRoutes

GET         /profile                                 controllers.Application.profile

GET         /about                                   controllers.Application.about

GET         /contact                                 controllers.Application.contact

GET         /login                                   controllers.Application.login
POST        /login                                   controllers.Application.doLogin

GET         /following                               controllers.Application.getUsersFollowing()

GET         /u/:id                                   controllers.Application.getUserProfile(id: String)

GET         /follow/:id                              controllers.Application.toggleFollow(id: String)


GET         /logout                                  com.feth.play.module.pa.controllers.Authenticate.logout
GET         /authenticate/:provider                  com.feth.play.module.pa.controllers.Authenticate.authenticate(provider: String)

GET         /signup                                  controllers.Application.signup
POST        /signup                                  controllers.Application.doSignup

GET         /accounts/unverified                     controllers.Signup.unverified
GET         /authenticate/:provider/denied           controllers.Signup.oAuthDenied(provider: String)

GET         /accounts/verify/:token                  controllers.Signup.verify(token: String)
GET         /accounts/exists                         controllers.Signup.exists

GET         /accounts/password/reset/:token          controllers.Signup.resetPassword(token: String)
POST        /accounts/password/reset                 controllers.Signup.doResetPassword

GET         /accounts/password/change                controllers.Account.changePassword
POST        /accounts/password/change                controllers.Account.doChangePassword

GET         /accounts/verify                         controllers.Account.verifyEmail

GET         /accounts/add                            controllers.Account.link

GET         /accounts/link                           controllers.Account.askLink
POST        /accounts/link                           controllers.Account.doLink

GET         /accounts/unlink/:provider               controllers.Account.unlink(provider: String)

GET         /accounts/merge                          controllers.Account.askMerge
POST        /accounts/merge                          controllers.Account.doMerge


GET         /login/password/forgot                   controllers.Signup.forgotPassword(email: String ?= "")
POST        /login/password/forgot                   controllers.Signup.doForgotPassword


GET         /snips/getSnip                           controllers.SnipController.getSnip(id: String)

GET         /snips/getPopular                        controllers.SnipController.getPopularSnips()

GET         /snips/add                               controllers.SnipController.add()

POST        /snips/add/getVideo                      controllers.SnipController.getVideo(songUrl: String)

POST        /snips/add/createSnip                    controllers.SnipController.createSnip()


GET         /s/:id                                   controllers.SnipController.viewSnipById(id: String)


GET         /:id/snips                               controllers.SnipCollectionController.viewSnipsByUser(id: String)

GET         /snips                                   controllers.SnipCollectionController.mySnips()

POST        /snips/removeSnip                        controllers.SnipCollectionController.removeSnip(id: String)

POST        /snips/saveSnip                          controllers.SnipCollectionController.saveSnip(id: String)

POST        /snips/toggleSnip                        controllers.SnipCollectionController.toggleSnip(id: String)



GET         /sniplists/                              controllers.SniplistCollectionController.mySniplists()

POST        /sniplists/removeSniplist                controllers.SniplistCollectionController.removeSniplist(id: String)

POST        /sniplists/saveSniplist                  controllers.SniplistCollectionController.saveSniplist(id: String)

POST        /sniplists/toggleSniplist                controllers.SniplistCollectionController.toggleSniplist(id: String)

POST        /sniplists/getNextSnip                   controllers.SniplistCollectionController.getNextSnip()



GET         /l/:id                                   controllers.SniplistController.viewSniplistById(id: String)

GET         /sniplists/getPopular                    controllers.SniplistController.getPopularSniplists()


GET         /:id/sniplists                           controllers.SniplistController.viewSniplistsByUser(id: String)

GET         /sniplists                               controllers.SniplistController.viewSniplists()

POST        /sniplists/new                           controllers.SniplistController.saveSnipList()

POST        /sniplists/add                           controllers.SniplistController.addToSnipList(snipList_id: String, snip_id: String)

GET         /sniplists/load                          controllers.SniplistController.loadSnipListByUser(snipList_id: String)

POST        /sniplists/deleteSnip                    controllers.SniplistController.deleteFromSnipList(snipList_id: String, snip_id: String)

POST        /sniplists/viewSnipListsLocalUser        controllers.SniplistController.viewSnipListsLocalUser()



# Javascript routing
GET         /assets/javascripts/routes               controllers.Application.javascriptRoutes()

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                            controllers.Assets.at(path="/public", file)

